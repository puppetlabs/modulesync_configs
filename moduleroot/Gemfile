#This file is generated by ModuleSync, do not edit.

source ENV['GEM_SOURCE'] || "https://rubygems.org"

# Determines what type of gem is requested based on place_or_version.
def gem_type(place_or_version)
  if place_or_version =~ /^git:/
    :git
  elsif place_or_version =~ /^file:/
    :file
  else
    :gem
  end
end

# Find a location or specific version for a gem. place_or_version can be a
# version, which is most often used. It can also be git, which is specified as
# `git://somewhere.git#branch`. You can also use a file source location, which
# is specified as `file://some/location/on/disk`.
def location_for(place_or_version, fake_version = nil)
  if place_or_version =~ /^(git[:@][^#]*)#(.*)/
    [fake_version, { :git => $1, :branch => $2, :require => false }].compact
  elsif place_or_version =~ /^file:\/\/(.*)/
    ['>= 0', { :path => File.expand_path($1), :require => false }]
  else
    [place_or_version, { :require => false }]
  end
end

# Used for gem conditionals
ruby_version_segments = Gem::Version.new(RUBY_VERSION.dup).segments
minor_version = "#{ruby_version_segments[0]}.#{ruby_version_segments[1]}"

# The following gems are not included by default as they require DevKit on Windows.
# You should probably include them in a Gemfile.local or a ~/.gemfile
#gem 'pry' #this may already be included in the gemfile
#gem 'pry-stack_explorer', :require => false
#if RUBY_VERSION =~ /^2/
#  gem 'pry-byebug'
#else
#  gem 'pry-debugger'
#end

<% groups = {} -%>
<% (@configs['required'].keys + ((@configs['optional'] || {}).keys)).uniq.each do |key| -%>
<%   groups[key] = (@configs['required'][key] || []) + ((@configs['optional'] || {})[key] || []) -%>
<% end -%>
<% -%>
<% groups.each do |group, gems| -%>
group <%= group %> do
<% maxlen = gems.map! do |gem| -%>
<%            { -%>
<%              'gem'       => gem['gem'], -%>
<%              'version'   => gem['version'], -%>
<%              'git'       => gem['git'], -%>
<%              'branch'    => gem['branch'], -%>
<%              'ref'       => gem['ref'], -%>
<%              'platforms' => gem['platforms'], -%>
<%              'length'    => (gem['gem'].length + (
                  if gem['from_env']
                    " *location_for(ENV['#{gem['from_env']}'])".length + ((" || '#{gem['version']}'".length if gem['version']) || 0)
                  else
                    (", '#{gem['version']}'".length if gem['version']) || 0
                  end)), -%>
<%              'from_env'  => gem['from_env'], -%>
<%              'condition' => gem['condition'] -%>
<%            } -%>
<%          end.map do |gem| -%>
<%            gem['length'] -%>
<%          end.max -%>
<% gems.each do |gem| -%>
  gem "<%=
  gem['gem'] %>", <%
  if gem['from_env'] %>*location_for(ENV['<%= gem['from_env'] %>']<%= " || '#{gem['version']}'" if gem['version'] %>)<%
  else -%><%= "'#{gem['version']}', " if gem['version'] %><%
  end %><%=
  ' ' * (maxlen - gem['length']) %><%=
  ":require => false" if ! gem['from_env'] %><%=
  ", :git => '#{gem['git']}'" if gem['git'] %><%=
  ", :branch => '#{gem['branch']}'" if gem['branch'] %><%=
  ", :ref => '#{gem['ref']}'" if gem['ref'] %><%=
  ", :platforms => #{gem['platforms']}" if gem['platforms'].is_a?(Array) %><%=
  ", :platforms => \"#{gem['platforms']}\"" if gem['platforms'] && !gem['platforms'].is_a?(Array) %><%=
  " if #{gem['condition']}" if gem['condition'] %>
<% end -%>
end

<% end -%>
gem 'puppet', *location_for(ENV['PUPPET_GEM_VERSION'])

# Only explicitly specify Facter/Hiera if a version has been specified.
# Otherwise it can lead to strange bundler behavior. If you are seeing weird
# gem resolution behavior, try setting `DEBUG_RESOLVER` environment variable
# to `1` and then run bundle install.
gem 'facter', *location_for(ENV['FACTER_GEM_VERSION']) if ENV['FACTER_GEM_VERSION']
gem 'hiera', *location_for(ENV['HIERA_GEM_VERSION']) if ENV['HIERA_GEM_VERSION']

if Gem::Platform.local.os == 'mingw32'
  # If we're using a Puppet gem on windows, which handles its own win32-xxx gem dependencies (Pup 3.5.0 and above), set maximum versions
  # Required due to PUP-6445
  gem "win32-dir", "<= 0.4.9",        :require => false
  gem "win32-eventlog", "<= 0.6.5",   :require => false
  gem "win32-process", "<= 0.7.5",    :require => false
  gem "win32-security", "<= 0.2.5",   :require => false
  gem "win32-service", "<= 0.8.8",    :require => false
end

# Evaluate Gemfile.local if it exists
if File.exists? "#{__FILE__}.local"
  eval(File.read("#{__FILE__}.local"), binding)
end

# Evaluate ~/.gemfile if it exists
if File.exists?(File.join(Dir.home, '.gemfile'))
  eval(File.read(File.join(Dir.home, '.gemfile')), binding)
end

# vim:ft=ruby
